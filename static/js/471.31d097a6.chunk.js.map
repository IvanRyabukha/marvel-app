{"version":3,"file":"static/js/471.31d097a6.chunk.js","mappings":"sLAEA,MAYA,EAZqBA,KAEjBC,EAAAA,EAAAA,KAAA,OACEC,IAAKC,EACLC,IAAI,YACJC,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QACjDC,UAAW,UAAWC,OAAQ,W,0DCsBtC,QA5BA,WACE,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,WAAS,GAC7BC,GAAMC,EAAAA,EAAAA,QAAO,MAEbC,GAAkBC,EAAAA,EAAAA,aAAY,IAAML,GAAS,GAAO,IACpDM,GAAiBD,EAAAA,EAAAA,aAAY,IAAML,GAAS,GAAQ,IAoB1D,OAlBAO,EAAAA,EAAAA,WACE,KACE,MAAMC,EAAON,EAAIO,QACjB,GAAKD,EAOL,OAHAA,EAAKE,iBAAiB,YAAaN,GACnCI,EAAKE,iBAAiB,WAAYJ,GAE3B,KACLE,EAAKG,oBAAoB,YAAaP,GACtCI,EAAKG,oBAAoB,WAAYL,KAGzC,CAACA,EAAgBF,IAGZ,CAACF,EAAKH,EACf,E,+BCvBA,MA2BA,EA3BgBa,KACd,MAAOC,EAAUC,GAAaC,IAExBC,EAAY,CAChBtB,QAAS,QACTuB,UAAW,SACXC,WAAY,OACZC,SAAU,OACVC,UAAW,OACXC,MAAOP,EAAY,UAAY,WAGjC,OACEQ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACElC,EAAAA,EAAAA,KAACD,EAAAA,EAAY,KACbC,EAAAA,EAAAA,KAAA,KAAGI,MAAO,CAACwB,UAAW,SAAUC,WAAY,OAAQC,SAAU,QAAQI,SAAC,wBACvElC,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CACHtB,IAAKW,EACLpB,MAAOuB,EACPS,GAAI,IAAIF,SACT,yB","sources":["components/errorMessage/ErrorMessage.jsx","hooks/useHover.jsx","components/pages/404.jsx"],"sourcesContent":["import img from './error.gif';\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      src={img}\n      alt=\"Error gif\"\n      style={{ display: 'block', width: '250px', height: '250px',\n        objectFit: 'contain', margin: '0 auto'\n      }}\n    />\n  );\n};\n\nexport default ErrorMessage;","import { useState, useRef, useEffect, useCallback } from \"react\";\n\nfunction useHover() {\n  const [value, setValue] = useState(false);\n  const ref = useRef(null);\n\n  const handleMouseOver = useCallback(() => setValue(true), []);\n  const handleMouseOut = useCallback(() => setValue(false), []);\n\n  useEffect(\n    () => {\n      const node = ref.current;\n      if (!node) {\n        return;\n      }\n\n      node.addEventListener(\"mouseover\", handleMouseOver);\n      node.addEventListener(\"mouseout\", handleMouseOut);\n\n      return () => {\n        node.removeEventListener(\"mouseover\", handleMouseOver);\n        node.removeEventListener(\"mouseout\", handleMouseOut);\n      };\n    },\n    [handleMouseOut, handleMouseOver]\n  );\n\n  return [ref, value];\n}\n\nexport default useHover;\n","import useHover from \"../../hooks/useHover\";\n\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport { Link } from \"react-router-dom\";\n\nconst Page404 = () => {\n  const [hoverRef, isHovered] = useHover();\n\n  const linkStyle = {\n    display: 'block',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: '24px',\n    marginTop: '30px',\n    color: isHovered ? '#9f0013' : 'inherit',\n  };\n\n  return (\n    <div>\n      <ErrorMessage />\n      <p style={{textAlign: 'center', fontWeight: 'bold', fontSize: '24px'}}>Page doesn't exist</p>\n      <Link\n        ref={hoverRef}\n        style={linkStyle}\n        to={'/'}\n      >\n        Back to main page\n      </Link>\n    </div>\n  );\n};\n\nexport default Page404;"],"names":["ErrorMessage","_jsx","src","img","alt","style","display","width","height","objectFit","margin","value","setValue","useState","ref","useRef","handleMouseOver","useCallback","handleMouseOut","useEffect","node","current","addEventListener","removeEventListener","Page404","hoverRef","isHovered","useHover","linkStyle","textAlign","fontWeight","fontSize","marginTop","color","_jsxs","children","Link","to"],"sourceRoot":""}
{"version":3,"file":"static/js/434.4cb51f46.chunk.js","mappings":"qMAUA,MAiCMA,EAAOC,IAAgB,IAAf,MAAEC,GAAOD,EACrB,MAAM,MAAEE,EAAK,YAAEC,EAAW,UAAEC,EAAS,UAAEC,EAAS,SAAEC,EAAQ,MAAEC,GAAUN,EAEtE,OACEO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKP,EAAWQ,IAAKX,EAAOO,UAAU,uBAC3CD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qBAAoBC,SAAER,KACpCS,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAEP,KACpCQ,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAEN,KACpCI,EAAAA,EAAAA,MAAA,KAAGC,UAAU,sBAAqBC,SAAA,CAAC,aAAWJ,MAC9CK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SAAEH,QAExCI,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAACC,GAAI,UAAWN,UAAU,qBAAoBC,SAAC,oBAO1D,EArDwBM,KACtB,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbjB,EAAOkB,IAAYC,EAAAA,EAAAA,UAAS,OAE7B,QAAEC,EAAO,MAAEC,EAAK,SAAEC,EAAQ,WAAEC,IAAeC,EAAAA,EAAAA,MAEjDC,EAAAA,EAAAA,WAAU,KACRC,KACC,CAACV,IAEJ,MAAMU,EAAcA,KAClBH,IACAD,EAASN,GAASW,KAAKC,IAGnBA,EAAiB5B,IACrBkB,EAASlB,IAGL6B,EAAeR,GAAQX,EAAAA,EAAAA,KAACoB,EAAAA,EAAY,IAAM,KAC1CC,EAAUX,GAAUV,EAAAA,EAAAA,KAACsB,EAAAA,EAAO,IAAM,KAClCC,EAAYb,GAAWC,IAAUrB,EAAkC,MAAzBU,EAAAA,EAAAA,KAACZ,EAAI,CAACE,MAAOA,IAE7D,OACEO,EAAAA,EAAAA,MAAA2B,EAAAA,SAAA,CAAAzB,SAAA,EACAC,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,IACPN,EACAE,EACAE,K,4CCpCA,MC2DP,EA3DyBT,KACvB,MAAM,QAAEJ,EAAO,QAAEgB,EAAO,MAAEf,EAAK,WAAEE,GDDZc,MACrB,MAAOjB,EAASkB,IAAcnB,EAAAA,EAAAA,WAAS,IAChCE,EAAOkB,IAAYpB,EAAAA,EAAAA,UAAS,MAoCnC,MAAO,CAACC,UAASgB,SAhCDI,EAAAA,EAAAA,aACdC,eACEC,GAII,IAHJC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MACTG,EAAIH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACPI,EAAOJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEXN,GAAW,GAEX,IACE,MAAMW,QAAiBC,MAAMR,EAAK,CAAEC,SAAQI,OAAMC,YAElD,IAAKC,EAASE,GACZ,MAAM,IAAIC,MAAM,mBAAmBV,cAAgBO,EAASI,UAG9D,MAAMC,QAAaL,EAASM,OAI5B,OAFAjB,GAAW,GAEJgB,CACT,CAAE,MAAOE,GAGP,MAFAlB,GAAW,GACXC,EAASiB,EAAEC,SACLD,CACR,CACF,EACA,IAKwBnC,QAAOE,YAFdiB,EAAAA,EAAAA,aAAY,IAAMD,EAAS,MAAO,MCnCLF,GAE1CqB,EAAW,yCACXC,EAAU,0CAgBXC,EAAuBC,IACnB,CACLC,GAAID,EAAKC,GACTC,KAAMF,EAAKE,KACX7D,YAAa2D,EAAK3D,YAAc,GAAG2D,EAAK3D,YAAY2C,OAAS,IAAMgB,EAAK3D,YAAY8D,MAAM,EAAG,KAAO,MAAQH,EAAK3D,cAAgB,wCACjIE,UAAWyD,EAAKzD,UAAU6D,KAAO,IAAMJ,EAAKzD,UAAU8D,UACtDC,SAAUN,EAAKO,KAAK,GAAG1B,IACvB2B,KAAMR,EAAKO,KAAK,GAAG1B,IACnB4B,OAAQT,EAAKS,OAAOC,MAAMP,MAAM,EAAG,MAgBjCQ,EAAoBF,IAAY,IAADG,EACnC,MAAO,CACLX,GAAIQ,EAAOR,GACX7D,MAAOqE,EAAOrE,MACdC,YAAaoE,EAAOpE,aAAe,0BACnCC,UAAWmE,EAAOnE,UAAY,GAAGmE,EAAOnE,eAAiB,2CACzDC,UAAWkE,EAAOlE,UAAU6D,KAAO,IAAMK,EAAOlE,UAAU8D,UAC1D5D,MAAOgE,EAAOI,OAAO,GAAGpE,MAAQ,GAAGgE,EAAOI,OAAO,GAAGpE,SAAW,gBAC/DD,UAA+B,QAArBoE,EAAAH,EAAOK,YAAY,UAAE,IAAAF,OAAA,EAArBA,EAAuBG,YAAa,UAIlD,MAAO,CAAExD,UAASC,QAAOwD,iBAhDApC,iBAAiC,IAA1BqC,EAAMlC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHlB,EAMlB,aAFkBR,EAAQ,GAAGsB,8BAAqCoB,KAAUnB,MAEjEL,KAAKyB,QAAQC,IAAIpB,EAC9B,EA4C2CqB,aA1CtBxC,UACnB,MAAMyC,QAAY9C,EAAQ,GAAGsB,eAAsBI,KAAMH,KAEzD,OAAOC,EAAoBsB,EAAI5B,KAAKyB,QAAQ,KAuCWxD,aAAY4D,aAxBhD1C,iBAAiC,IAA1BqC,EAAMlC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GA3Bd,EA8BlB,aAFkBR,EAAQ,GAAGsB,0BAAiCoB,KAAUnB,MAE7DL,KAAKyB,QAAQC,IAAIR,EAC9B,EAoBmFlD,SAlBlEmB,UACf,MAAMyC,QAAY9C,EAAQ,GAAGsB,WAAkBI,KAAMH,KAErD,OAAOa,EAAiBU,EAAI5B,KAAKyB,QAAQ,M,wGCzC7C,MAYA,EAZqBjD,KAEjBpB,EAAAA,EAAAA,KAAA,OACEC,IAAKyE,EACLxE,IAAI,YACJyE,MAAO,CAAEC,QAAS,QAASC,MAAO,QAASC,OAAQ,QACjDC,UAAW,UAAWC,OAAQ,W,uKCJtC,MAaA,EAbkBvD,KAEd5B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKgF,EAAU/E,IAAI,cACxBL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,0BACVC,EAAAA,EAAAA,KAAA,SAAK,kBAG7BA,EAAAA,EAAAA,KAAA,OAAKC,IAAKiF,EAAchF,IAAI,oB","sources":["components/pages/SingelComicPage.jsx","hooks/http.hook.jsx","services/MarvelService.js","components/errorMessage/ErrorMessage.jsx","components/appBanner/AppBanner.jsx"],"sourcesContent":["import { useParams, Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./singleComicPage.scss\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst SingleComicPage = () => {\n  const { comicId } = useParams();\n  const [comic, setComic] = useState(null);\n\n  const { loading, error, getComic, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateComic();\n  }, [comicId]);\n\n  const updateComic = () => {\n    clearError();\n    getComic(comicId).then(onComicLoaded);\n  };\n\n  const onComicLoaded = (comic) => {\n    setComic(comic);\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\n\n  return (\n    <>\n    <AppBanner />\n      {errorMessage}\n      {spinner}\n      {content}\n    </>\n  );\n};\n\nconst View = ({ comic }) => {\n  const { title, description, pageCount, thumbnail, language, price } = comic;\n\n  return (\n    <div className=\"single-comic\">\n      <img src={thumbnail} alt={title} className=\"single-comic__img\" />\n      <div className=\"single-comic__info\">\n        <h2 className=\"single-comic__name\">{title}</h2>\n        <p className=\"single-comic__descr\">{description}</p>\n        <p className=\"single-comic__descr\">{pageCount}</p>\n        <p className=\"single-comic__descr\">Language: {language}</p>\n        <div className=\"single-comic__price\">{price}</div>\n      </div>\n      <Link to={\"/comics\"} className=\"single-comic__back\">\n        Back to all\n      </Link>\n    </div>\n  );\n};\n\nexport default SingleComicPage;\n","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  //\"Content-Type\": \"application/json\"\n\n  const request = useCallback(\n    async (\n      url,\n      method = \"GET\",\n      body = null,\n      headers = {}\n    ) => {\n      setLoading(true);\n\n      try {\n        const response = await fetch(url, { method, body, headers });\n\n        if (!response.ok) {\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n        }\n\n        const data = await response.json();\n\n        setLoading(false);\n\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n\n  const clearError = useCallback(() => setError(null), []);\n\n  return {loading, request, error, clearError};\n};\n","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n  const { loading, request, error, clearError } = useHttp();\n\n  const _apiBase = 'https://marvel-server-zeta.vercel.app/';\n  const _apiKey = 'apikey=d4eecb0c66dedbfae4eab45d312fc1df';\n  const _baseOffset = 0;\n\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n  \n    return res.data.results.map(_transformCharacter);\n  };\n\n  const getCharacter = async (id) => {\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n    \n    return _transformCharacter(res.data.results[0]);\n  };\n\n const _transformCharacter = (char) => {\n    return {\n      id: char.id,\n      name: char.name,\n      description: char.description ? `${char.description.length > 210 ? char.description.slice(0, 210) + '...' : char.description}` : `Character doesn't have description :(`,\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n      homepage: char.urls[0].url,\n      wiki: char.urls[1].url,\n      comics: char.comics.items.slice(0, 10),\n    }\n  };\n\n  const getAllComics = async (offset = _baseOffset) => {\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n  \n    return res.data.results.map(_transformComics);\n  };\n\n  const getComic = async (id) => {\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\n    return _transformComics(res.data.results[0]);\n  };\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || \"There is no description\",\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\n      language: comics.textObjects[0]?.languages || 'en-us',\n    };\n  };\n\n  return { loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic };\n};\n\nexport default useMarvelService;","import img from './error.gif';\n\nconst ErrorMessage = () => {\n  return (\n    <img\n      src={img}\n      alt=\"Error gif\"\n      style={{ display: 'block', width: '250px', height: '250px',\n        objectFit: 'contain', margin: '0 auto'\n      }}\n    />\n  );\n};\n\nexport default ErrorMessage;","import \"./appBanner.scss\";\nimport avangers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avangers} alt=\"Avangers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!<br/>\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport default AppBanner;\n"],"names":["View","_ref","comic","title","description","pageCount","thumbnail","language","price","_jsxs","className","children","_jsx","src","alt","Link","to","SingleComicPage","comicId","useParams","setComic","useState","loading","error","getComic","clearError","useMarvelService","useEffect","updateComic","then","onComicLoaded","errorMessage","ErrorMessage","spinner","Spinner","content","_Fragment","AppBanner","request","useHttp","setLoading","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","id","name","slice","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","prices","textObjects","languages","getAllCharacters","offset","results","map","getCharacter","res","getAllComics","img","style","display","width","height","objectFit","margin","avangers","avengersLogo"],"sourceRoot":""}